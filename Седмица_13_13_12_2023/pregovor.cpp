#include<iostream>
using namespace std;
int main()
{
    /// Преговор

    /// Какво е двумерен масив?
    /// Таблица с редове и колони

    ///Как декларираме двумерен масив – статично и динамично?
    /// 1. статично
    ///<типа_на_клетките> <името_на_масива>[редове][колони]
    int table[rows][cols];

    /// 2. динамично
    int **table = new int*[n]; /// заделяме памет за редовете, n - брой редове
    for(int i = 0; i < n; i++)
    {
        table[i] = new int[n]; /// заделяме памет за стълбовете
    }

    /// !!!Задължително освобождаваме след работа с масива паметта!!!
    for(int i = 0; i < n; i++)
    {
        delete[] table[i]; /// освобождаваме колони
    }
    delete[] table; /// освобождаваме редове

    ///Как достъпваме елементите на двумерния масив?
    for(int i = 0; i < n; i++)
    {
        for(int j = 0; j < n; j++)
        {
            cin>>table[i][j];
        }
    }

    /// Как обхождаме диагоналите на двумерния масив?
    /// 1. главен диагонал - if(i == j)
    /// 2. втори главен диагонал - if(i + j == n - 1)

    /// Как сортираме двумерен масив?
    /// Вижте файл sort_2D_array.cpp

    /// Каква е разликата между оператор звезда (*) и адресен оператор (&)?
    /// Оператор * създава указател, а & взима адреса на дадена променлива.

    /// По какви начини можем да подадем на параметър на функция?
    /// 1. Подаване чрез копиране (без & и *):
    /// - създава копие на подадената променлива
    /// - не се променя стойността в main-a
    /// 2. Подаване чрез адресен оператор
    /// - взимаме адреса на променливата и работим със стойността на този адрес
    /// in main()
    /// input(a);
    /// декларация:
    /// void input(int &a)
    /// 3. Подаване чрез указател
    /// in main()
    /// input(&a);
    /// декларация:
    /// void input(int *a)

    /// Какво е структура в С++?
    /// Тип данни, в който може да се съдържат различни типове данни

    /// Как декларираме структура в С++?
    /// struct <име_на_типа>
    /// {
    ///     <член_данни>
    /// };

    /// struct <име_на_типа> <име_на_обекта>;

    /// По какви начини можем да достъпим член-данните на дадена структура?
    /// <име_на_обект>.<член_данни>;
    /// struct Point
    /// {
    ///     int x,y;
    /// };
    /// struct Point p1, p2;
    /// p1.x - х на точка p1
    /// p2.y - y на точка p2

    /// Какви са разликите между масивите и структурите?
    /// Масивът съдържа елементи с еднакъв тип,
    /// а структурата може да съдържа различни типове данни.

    /// Какви задачи можем да решаваме със структури?
    /// Задачи с работа с обекти, които имат различни характеристики.

    return 0;
}
